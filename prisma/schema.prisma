datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String    @db.VarChar(100)
  product Product[]

  @@map("categories")
}

model Product {
  id               Int                   @id @default(autoincrement())
  category         Category              @relation(fields: [categoryId], references: [id])
  categoryId       Int                   @map("category_id")
  englishName      String                @map("english_name") @db.VarChar(100)
  koreanName       String                @map("korean_name") @db.VarChar(100)
  image            Image[]
  productOnAllergy ProductsOnAllergies[]
  nutrition        Nutrition[]

  @@map("products")
}

model Nutrition {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int     @map("product_id")
  calory    Float   @map("calories") @db.Double
  fat       Float   @db.Double
  protein   Float   @db.Double
  sodium    Float   @db.Double
  sugar     Float   @db.Double
  caffeine  Float   @db.Double

  @@map("nutritions")
}

model Image {
  id        Int     @id @default(autoincrement())
  imageUrl  String  @map("image_url") @db.VarChar(100)
  productId Int     @map("product_id")
  product   Product @relation(fields: [productId], references: [id])

  @@map("images")
}

model Allergy {
  id              Int                   @id @default(autoincrement())
  name            String                @db.VarChar(100)
  productOnAllegy ProductsOnAllergies[]

  @@map("allergies")
}

model ProductsOnAllergies {
  id        Int     @id @default(autoincrement())
  productId Int     @map("product_id")
  product   Product @relation(fields: [productId], references: [id])
  allergyId Int     @map("allergy_id")
  allergy   Allergy @relation(fields: [allergyId], references: [id])

  @@map("products_allergies")
}

model User {
  id           Int     @id @default(autoincrement())
  email        String  @unique @db.VarChar(100)
  password     String  @db.VarChar(100)
  userName     String? @map("user_name") @db.VarChar(100)
  address      String? @db.VarChar(100)
  phoneNumber  String? @map("phone_number") @db.VarChar(100)
  policyAgreed Boolean @default(true)

  @@map("users")
}
